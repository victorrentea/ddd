logging.level.org.springframework=INFO
logging.level.victor=DEBUG
logging.level.com.p6spy=DEBUG
logging.level.p6spy=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} -%5p %-16.16thread %-20.20logger{0} %message%n

# to see the DB, use the following DB url:
#spring.datasource.url=jdbc:h2:tcp://localhost:9092/~/test
spring.datasource.url=jdbc:p6spy:h2:tcp://localhost:9092/~/test
#spring.datasource.url=jdbc:p6spy:h2:mem:
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.username=sa
spring.datasource.password=sa

#hibernate (drop-)creates schema on startup
spring.jpa.hibernate.ddl-auto=create

#spring.cloud.stream.kafka.binder.configuration.commit.interval.ms = 1000
#spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.cloud.stream.kafka.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.binder.min-partition-count=1
#spring.cloud.stream.kafka.binder.replication-factor=1

# for JMS-based command/observer pattern
#spring.cloud.stream.bindings.ordersConfirmedOut.destination=orderConfirmedQueue
#spring.cloud.stream.bindings.ordersConfirmedIn.destination=orderConfirmedQueue
#spring.cloud.stream.bindings.ordersConfirmedIn.group=q1group
#spring.cloud.stream.bindings.ordersConfirmedIn.consumer.concurrency=1


management.endpoints.web.exposure.include=*